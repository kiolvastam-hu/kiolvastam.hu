import {
  Box,
  Center,
  Flex,
  Heading,
  Image,
  Link,
  Tab,
  TabList,
  TabPanel,
  TabPanels,
  Tabs,
  Text,
} from '@chakra-ui/react'
import axios from 'axios'
import { Layout } from 'components/Layout'
import PostCard from 'components/PostCard'
import { BASEURL } from 'helpers'
import { GetServerSideProps, InferGetServerSidePropsType } from 'next'
import NextLink from 'next/link'
import { PostProps } from 'types'
export default function Post({
  props,
}: {
  props: BookProps
}): InferGetServerSidePropsType<typeof getServerSideProps> {
  return (
    <Layout>
      <Flex justifyContent="space-between">
        <Box>
          <Heading>
            {props.book.authors[0].name} - {props.book.title} (
            {((props.book.like_average * 100) / 5).toFixed(0)}%)
          </Heading>
          <Text>{props.book.description}</Text>
          <Text as="i">
            Forrás:{' '}
            <NextLink href={props.book.url} passHref>
              <Link target="_blank">moly.hu</Link>
            </NextLink>
          </Text>
        </Box>
        <Image
          src={props.book.cover}
          width="225px"
          height="225px"
          alt={props.book.title}
          ml={4}
        />
      </Flex>

      <Tabs variant="soft-rounded" colorScheme="green">
        <Center>
          <TabList>
            <Tab>Vélemények</Tab>
            <Tab>Összefoglalók</Tab>
          </TabList>
        </Center>
        <TabPanels>
          <TabPanel>
            {props.opinions.length > 0 && (
              <Box>
                <Heading as="h2" size="lg" mt={10} mb={3}>
                  Vélemények
                </Heading>
                {props.opinions.map(post => (
                  <PostCard key={post.id} short {...post} hideBook hideTags />
                ))}
              </Box>
            )}
          </TabPanel>
          <TabPanel>
            {props.summaries.length > 0 && (
              <Box>
                <Heading as="h2" size="lg" mt={10} mb={3}>
                  Összefoglalók
                </Heading>
                {props.summaries.map(post => (
                  <PostCard key={post.id} short {...post} hideBook hideTags />
                ))}
              </Box>
            )}
          </TabPanel>
        </TabPanels>
      </Tabs>
    </Layout>
  )
}

export const getServerSideProps: GetServerSideProps = async ({ params }) => {
  const paramString = encodeURI(params!.id as string)
  const result = await axios.get(`${BASEURL}/books/${paramString}`)
  const data: PostProps = result.data
  return {
    props: {
      props: data,
    },
  }
}

export type BookProps = {
  book: Book
  summaries: PostProps[] | []
  opinions: PostProps[] | []
}

// Generated by https://quicktype.io

export interface Book {
  id: number
  authors: Author[]
  editors: any[]
  title: string
  subtitle: string
  cover: string
  description: string
  url: string
  tags: Author[]
  like_average: number
  like_count: number
  reviews_count: number
  citations_count: number
  year_of_publishing: number
}

export interface Author {
  id: number
  name: string
}
